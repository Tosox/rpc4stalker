-- Import discord_game_sdk.lua
package.path = package.path .. ';gamedata\\scripts\\discord_game_sdk\\?.lua'
local game_sdk = require("discord_game_sdk")

-- Set discord_game_sdk's print function to Xray's printf
game_sdk.print = function(arg)
	printf("[rpc4stalker] " .. arg)
end

-- TODO: Remove since just for debugging
game_sdk.options.log_level = game_sdk.LOG_LEVEL_INFO

local start_time = os.time(os.date("*t"))

local presence = {
	start_time = start_time,
	large_image = "stalker_icon_0",
    large_text = "S.T.A.L.K.E.R.",
	details = "",
    state = "",
    small_image = "",
    small_text = "",
}

function update_presence_data()
	local lvl_name = game.translate_string(level.name())
	presence.details = game.translate_string("st_rpc4stalker_exploring") .. ": " .. lvl_name

	for _, tsk in pairs(task_manager.get_task_manager().task_info) do
		if db.actor:is_active_task(db.actor:get_task(tsk.id, true)) then
			presence.state = game.translate_string(tsk.current_title)
			break
		end
	end

	local faction_name = game.translate_string(db.actor:character_community())
	presence.small_text = faction_name

	local faction_raw_name = string.match(db.actor:character_community(), "^actor_(.+)")
	if faction_raw_name then
		presence.small_image = "stalker_patch_" .. faction_raw_name
	end
end

local discord_instance = nil

function actor_on_first_update()
	discord_instance = game_sdk.initialize(890702387025702922LL)

	CreateTimeEvent("rpc4stalker", "update_discord_presence", 5.0, function()
		update_presence_data()
		discord_instance = game_sdk.update_presence(discord_instance, presence)

		-- Wait 5 seconds then loop again
		ResetTimeEvent("rpc4stalker", "update_discord_presence", 5.0)
		return false
	end)
end

function actor_on_net_destroy()
	if discord_instance then
		-- Not working for some reason
		game_sdk.clear_presence(discord_instance)
	end
end

function on_game_start()
	RegisterScriptCallback("actor_on_first_update", actor_on_first_update)
	RegisterScriptCallback("actor_on_net_destroy", actor_on_net_destroy)
end
